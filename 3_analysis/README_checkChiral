README for check_chiral.py, last updated October 20th, 2021 by Marc and Tiffani.

Command line flags:
--gro (specify file that will generate dihedral angle atom indices)
--trj (specify the file that will be analyzed with gmx angle and the atom indices from the --gro file. This can be a .gro or a .trj)
--seq (Specify the sequence of the peptide analyzed, capitals represent L- amino acids and lowercase represent D- amino acids, if not specified in the command line, the program will prompt the user for input)

Example usage:
python check_chiral.py --gro equilNPT.gro --trj equilNPT.xtc --seq GNSRV
python check_chiral.py --gro equilNPT.gro --trj equilNPT.gro

Both cyclic and linear peptides are handled the same way, and the residues Glycine, Ace cap and NMe cap always have correct chirality as they are achiral. You should put one letter in for them in the sequence. Other caps may require the adjustment of the code in order to be supported.

The check_chiral.py script is designed to take two files, one to specify the system (.gro file) and one to analyze for chirality (.gro or .xtc). It works by first reading the system .gro file and identifying relevant atoms for chirality; an index file is created that uses these atoms to specify chiral dihedral angles. The program then uses gmx angle based on this index file to calculate the chiral angle for each residue. Each angle is compared against the user input sequence for the system and matching/non-matching chiralities are identified. The program is not dependent for user input when analyzing Glycine or Ace or NMe caps, (but you should still put some letter representing them in the input sequence. The final input will be a percentage of frames with matching chirality in stdout, and two index files that contain frames with all good chiralities and frames with one or more bad chiralities.
